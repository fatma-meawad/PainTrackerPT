@model PainTrackerPT.Models.Medicine.MedicineLog

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>MedicineLog</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" id="name" class="form-control" required="required" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <input asp-for="Type" id="type" class="form-control" required="required" />
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Img" class="control-label">Image File</label>
                <input type="file" asp-for="Img" required="required"/>
                <span asp-validation-for="Img" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">

<script type="text/javascript">
    var newListTag = [];
    var tags = @Json.Serialize(ViewData["medNameList"]);

    @*Create the Name List*@   
    for (var i = 0; i < tags.length; i++) {
        console.log(tags[i]);
        newListTag.push(tags[i].name);
    }

    
    @*Auto complete functionality *@
     $( function (){
         $("#name").autocomplete({
             select: function (event, ui) {
                 var itemChoosen = ui.item.value;
                 for (var i = 0; i < tags.length; i++) {
                     if (itemChoosen == tags[i].name) {
                         $("#type").val(tags[i].type);
                     }
                 }

             },
            source: function( request, response ) {
                var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( request.term ), "i" );
                response( $.grep( newListTag, function( item ){
                    return matcher.test( item );
                }));
            }
        });
     });

    @*After user click on the name, display the type as well*@
  
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
